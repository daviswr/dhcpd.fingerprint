##################################
# A few variables to make things cleaner
##################################
# Option 60
# vendor-id used for logging since it gets overwritten in a few cases
if (exists vendor-class-identifier) {
 set vendor-id = option vendor-class-identifier;
}

# Option 55
if (exists dhcp-parameter-request-list) {
 set prl = binary-to-ascii(16, 8, ":", option dhcp-parameter-request-list);
}
else {
 # This means there was no PRL sent. Uncommon but possible.
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
 # For some reason, things with PRL and VCI but no defined class match this randomly
 #elsif ((not exists vendor-class-identifier) and (not exists host-name)) { set ident = "IBM OS/2"; }
}


##################################
# Option definitions for particular clients
##################################
# Aruba access points
# Aruba DHCP discovery seems to cause problems with
# Cisco DHCP discovery in a mixed environment, despite
# Cisco using its own option space. DNS discovery may
# be better.
#option aruba-controller code 43 = ip-address;

# Cisco access points
option space cisco-controller;
option cisco-controller.ip code 241 = array of ip-address;

# IP phones
option voip-tftp-servers code 150 = array of ip-address;

# Prevent unnecessary DHCPINFORMS from Windows clients
# that keep looking for WPAD options
option wpad code 252 = text;
option wpad "\n\000";


##################################
# Match on just Vendor ID
# - very specific ID
# - loose match ok (ie, printer)
##################################
##
## Android unknown version
##
class "Vendor-Android-BrightSign" {
 match if (substring(option vendor-class-identifier, 0, 25) = "dhcpcd-5.5.4:Linux-2.6.39") and
          (suffix(option vendor-class-identifier, 16) = "BrightSign HD220");
 set ident = "BrightSign media appliance (Android)";
}

##
## Android 2.2
##
class "Vendor-Android22-Cisco-Cius" {
 match if(substring(option vendor-class-identifier, 0, 10) = "Cisco Cius");
 set ident = "Cisco Cius (Android 2.2)";
}
class "Vendor-Android22-Motorola-Triumph" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:TRIUMPH"));
 set ident = "Motorola Triumph (Android 2.2)";
}
# Below other Android 2.2 matches in case of better match
class "Vendor-Android22-Motorola-Droid" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.32") and
           (suffix   (option vendor-class-identifier, 21)    = ":armv7l:mapphone_CDMA"));
 set ident = "Motorola Droid family (Android 2.2)";
}
##
## Android 2.3
##
class "Vendor-Android23-HP-TouchPad" {
 match if (option vendor-class-identifier = "dhcpcd-5.2.10:Linux-2.6.35-palm-tenderloin:armv7l:TENDERLOIN");
 set ident = "HP TouchPad (Android 2.3)";
}
class "Vendor-Android23-HTC-Flyer" {
 # Evo View 4G on Sprint
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:flyer"));
 set ident = "HTC Flyer / Evo View 4G (Android 2.3)";
}
class "Vendor-Android23-Samsung-NexusS" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:herring"));
 set ident = "Samsung Nexus S (Android 2.3)";
}
class "Vendor-Android23-Vizio-vTab1008" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") and
           (suffix   (option vendor-class-identifier, 18)    = ":armv7l:Brownstone"));
 set ident = "Vizio vTab 1008 (Android 2.3)";
}
# Below other Android 2.3 matches in case of better match
class "Vendor-Android23-Motorola-Droid" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") and
           (suffix   (option vendor-class-identifier, 21)    = ":armv7l:mapphone_CDMA"));
 set ident = "Motorola Droid family (Android 2.3)";
}
##
## Android 3.0 / 3.1
##
class "Vendor-Android3-Acer-IconiaA100" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:vangogh"));
 set ident = "Acer Iconia Tab A100 (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Acer-IconiaA500" {
 # Codename Picasso, the "Thor" kernel appears to only be on this device
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:picasso")) or 
          (substring (option vendor-class-identifier, 0, 34) = "dhcpcd-5.2.10:Linux-2.6.36.4-thor-");
 set ident = "Acer Iconia Tab A500 (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Motorola-Xoom" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:stingray")) or 
          (substring (option vendor-class-identifier, 0, 42) = "dhcpcd-5.2.10:Linux-2.6.36.4-Tiamat_Xoom-"); 
 set ident = "Motorola Xoom (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Samsung-GalaxyTab7.0Plus" {
 match if (substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10:Linux-2.6.36-P6210");
 set ident = "Samsung Galaxy Tab 7.0 Plus (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Samsung-GalaxyTab7.7" {
 match if (substring(option vendor-class-identifier, 0, 31) = "dhcpcd-5.2.10:Linux-2.6.36-I815");
 set ident = "Samsung Galaxy Tab 7.7 (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Samsung-GalaxyTab-8.9" {
 match if (option vendor-class-identifier = "KT_SD_MV_SAMSUNG_GT-P7310");
 set ident = "Samsung Galaxy Tab 8.9 (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Samsung-GalaxyTab10.1" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") and
           (suffix   (option vendor-class-identifier, 10)    = ":armv7l:p3")) or
          (option vendor-class-identifier = "KT_SD_MV_SAMSUNG_GT-P7510");
 set ident = "Samsung Galaxy Tab 10.1 (Android 3.0 / 3.1)";
}
class "Vendor-Android3-Toshiba-Thrive" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:antares"));
 set ident = "Toshiba Thrive AT105 (Android 3.0 / 3.1)";
}
##
## Android 3.2
##
class "Vendor-Android32-Acer-IconiaA100" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:vangogh"));
 set ident = "Acer Iconia Tab A100 (Android 3.2)";
}
class "Vendor-Android32-Acer-IconiaA200" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 17)    = ":armv7l:picasso_e"));
 set ident = "Acer Iconia Tab A200 (Android 3.2)";
}
class "Vendor-Android32-Acer-IconiaA500" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:picasso"));
 set ident = "Acer Iconia Tab A500 (Android 3.2)";
}
class "Vendor-Android32-Motorola-Xoom" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:stingray")) or 
          (substring (option vendor-class-identifier, 0, 37) = "dhcpcd-5.2.10:Linux-2.6.39.4-Tiamat-");
 set ident = "Motorola Xoom (Android 3.2)";
}
class "Vendor-Android32-Samsung-GalaxyTab10.1" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 10)    = ":armv7l:p3"));
 set ident = "Samsung Galaxy Tab 10.1 (Android 3.2)";
}
class "Vendor-Android32-Sony-TabletS" {
# Need to improve matching
 match if ((substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10.13180:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:nbx03")) or
          ((substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10.17290:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:nbx03"));
 set ident = "Sony Tablet S (Android 3.2)";
}
class "Vendor-Android32-Toshiba-Thrive" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:antares"));
 set ident = "Toshiba Thrive AT105 (Android 3.2)";
}
##
## Android 4.0
##
class "Vendor-Android4-Amazon-KindleFireHD" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 27)    = ":armv7l:OMAP4 Bowser4 board") and
           (substring(option host-name, 0, 7)                = "kindle-")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 25)    = ":armv7l:OMAP4 blaze board") and
           (substring(option host-name, 0, 7)                = "kindle-")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 26)    = ":armv7l:OMAP4 Bowser board") and
           (substring(option host-name, 0, 7)                = "kindle-"));
 set ident = "Amazon Kindle Fire HD (Android 4.0)";
}
class "Vendor-Android4-Archos-101XS" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 26)    = ":armv7l:ARCHOS A101S board"));
 set ident = "Archos 101 XS (Android 4.0)";
}
class "Vendor-Android4-BN-Nook" {
 match if (((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
            (suffix   (option vendor-class-identifier, 27)    = ":armv7l:OMAP4 ovation board")) or
           ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
            (suffix   (option vendor-class-identifier, 31)    = ":armv7l:OMAP4 Hummingbird board")) and
           (substring(option host-name, 0, 5)                 = "nook-"));
 set ident = "B&N Nook family (Android 4.0)";
}
class "Vendor-Android4-HTC-Amaze4G" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 12)    = ":armv7l:ruby"));
 set ident = "HTC Amaze 4G (Android 4.0)";
}
class "Vendor-Android4-HTC-Evo3D" {
 # Shooter is CDMA, ShooterU is GSM
 # Evo V 4G on Virgin Mobile
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:shooter")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 17)    = ":armv7l:shooter_u"));
 set ident = "HTC Evo 3D / Evo V 4G (Android 4.0)";
}
class "Vendor-Android4-HTC-Evo4GLTE" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 11)    = ":armv7l:jet"));
 set ident = "HTC Evo 4G LTE (Android 4.0)";
}
class "Vendor-Android4-HTC-EvoDesign4G" {
 # Hero S on US Cellular
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:kingdom"));
 set ident = "HTC Evo Design 4G / Hero S (Android 4.0)";
}
class "Vendor-Android4-HTC-HD2" {
 match if ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.32") and
           (suffix   (option vendor-class-identifier, 14)    = ":armv7l:htcleo"));
 set ident = "HTC HD2 (Android 4.0)";
}
class "Vendor-Android4-HTC-Incredible4G" {
 # Droid Incredible 4G LTE on Verizon
 # Also called the Incredible 3
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:fighter"));
 set ident = "HTC Incredible 4G (Android 4.0)";
}
class "Vendor-Android4-HTC-OneS" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:ville"));
 set ident = "HTC One S (Android 4.0)";
}
class "Vendor-Android4-HTC-OneSV" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:k2_cl"));
 set ident = "HTC One SV (Android 4.0)";
}
class "Vendor-Android4-HTC-OneV" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (substring(suffix(option vendor-class-identifier, 14), 0, 13) = ":armv7l:primo"));
 set ident = "HTC One V (Android 4.0)";
}
class "Vendor-Android4-HTC-OneVX" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (substring(option vendor-class-identifier, 0, 11) = ":armv7l:tc2"));
 set ident = "HTC One VX (Android 4.0)";
}
class "Vendor-Android4-HTC-OneX" {
 # The codename went through a few revisions: Elite -> Edge -> Endeavor
 # Elite appears to be the hardware platform for the Evita model
 # The EndeavorU model appears to have kernel 2.6.39 despite running Android "4.0.3"
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:elite")) or
          ((substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") and
           (suffix   (option vendor-class-identifier, 17)    = ":armv7l:endeavoru"));
 set ident = "HTC One X (Android 4.0)";
}
class "Vendor-Android4-HTC-Rezound" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:vigor"));
 set ident = "HTC Rezound (Android 4.0)";
}
class "Vendor-Android4-HTC-Sensation" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:pyramid"));
 set ident = "HTC Sensation (Android 4.0)";
}
class "Vendor-Android4-HTC-ThunderBolt" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:mecha"));
 set ident = "HTC ThunderBolt (Android 4.0)";
}
class "Vendor-Android4-HTC-Vivid" {
 # Raider 4G internationally
 # Velocity 4G in Australia
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:holiday"));
 set ident = "HTC Vivid / Raider 4G / Velocity 4G (Android 4.0)";
}
class "Vendor-Android4-LG-OptimusL9" {
 # Optimus LTE internationally
 # Nitro HD on AT&T, Spectrum on Verizon
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 22)    = ":armv7l:LGE P769 board"));
 set ident = "LG Optimus L9 (Android 4.0)";
}
class "Vendor-Android4-LG-OptimusLTE" {
 # Optimus LTE internationally
 # Nitro HD on AT&T, Spectrum on Verizon
 # Optimus True HD LTE in Germany
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 27)    = ":armv7l:LGE I BOARD MSM8X60"));
 set ident = "LG Optimus LTE / Nitro HD / Spectrum (Android 4.0)";
}
class "Vendor-Android4-LG-OptimusLTE2" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 23)    = ":armv7l:LGE MSM8960 D1L"));
 set ident = "LG Optimus LTE2 (Android 4.0)";
}
class "Vendor-Android4-LG-OptimusRegard" {
# Possibly also Optimus Spectrum II
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 22)    = ":armv7l:LGE MSM8960 Lx"));
 set ident = "LG Optimus Regard (Android 4.0)";
}
class "Vendor-Android4-LG-Venice" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 22)    = ":armv7l:LGE MSM7X30 U0"));
 set ident = "LG Venice (Android 4.0)";
}
class "Vendor-Android4-Motorola-AtrixHD" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 14)    = ":armv7l:Qinara"));
 set ident = "Motorola Atrix HD (Android 4.0)";
}
class "Vendor-Android4-Motorola-DroidRazrHD" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:Vanquish"));
 set ident = "Motorola Droid Razr HD (Android 4.0)";
}
class "Vendor-Android4-Pantech-Marauder" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 25)    = ":armv7l:QCT MSM8960 STARQ"));
 set ident = "Pantech Marauder (Android 4.0)";
}
class "Vendor-Android4-Pantech-Presto" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 30)    = ":armv7l:PANTECH MSM8X60 PRESTO"));
 set ident = "Pantech Presto (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyAxiom" {
# Infinite appears to the codename or platform name for the SCH-R830
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 24)    = ":armv7l:SAMSUNG INFINITE"));
 set ident = "Samsung Galaxy Axiom (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyExhilarate" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SGH-I577")) or
          (substring(option vendor-class-identifier, 0, 35)  = "dhcpcd-5.2.10:Linux-3.0.8-perf-I577");
 set ident = "Samsung Galaxy Exhilarate (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyExpress" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 23)    = ":armv7l:SAMSUNG EXPRESS"));
 set ident = "Samsung Galaxy Express (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyNexus" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 12)    = ":armv7l:Tuna")) or
          (substring(option vendor-class-identifier, 0, 32)  = "dhcpcd-5.2.10:Linux-3.0.18-tuna-");
 set ident = "Samsung Galaxy Nexus (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyNote" {
 # N7000 is the original model
 # SGH-I717 is LTE for US/CA
 # SHV-E160x is LTE from South Korea
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SGH-I717")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (substring(suffix(option vendor-class-identifier, 17), 0, 16)  = ":armv7l:SHV-E160")) or
          (substring(option vendor-class-identifier, 0, 35) = "dhcpcd-5.2.10:Linux-3.0.8-perf-I717") or
          (substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10:Linux-3.0.15-N7000");
 set ident = "Samsung Galaxy Note (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyReverb" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SPH-M950"));
 set ident = "Samsung Galaxy Reverb (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyRush" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SPH-M830"));
 set ident = "Samsung Galaxy Rush (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyS" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 13)    = ":armv7l:aries"));
 set ident = "Samsung Galaxy S (Android 4.0)";
}
class "Vendor-Android4-Samsung-GS-Blaze4G" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SGH-T769"));
 set ident = "Samsung Galaxy S Blaze 4G (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyS2" {
 # GT-I9100 is the original 
 # SGH-T989 is the T-Mobile version
 # SGH-I777 is the AT&T version (no LTE)
 # Siyah is a custom ROM for Galaxy S II and III
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)   = ":armv7l:SGH-T989")) or
          (substring(option vendor-class-identifier, 0, 35) = "dhcpcd-5.2.10:Linux-3.0.8-perf-T989") or
          (substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10:Linux-3.0.15-I9100") or
          (substring(option vendor-class-identifier, 0, 31) = "dhcpcd-5.2.10:Linux-3.0.15-I777") or
          (substring(option vendor-class-identifier, 0, 35) = "dhcpcd-5.2.10:Linux-3.0.40-Siyah-s2");
 set ident = "Samsung Galaxy S II (Android 4.0)";
}
class "Vendor-Android4-Samsung-GS2-Epic4GTouch" {
 # Sprint version with WiMax
 # Also called Samsung Galaxy S II 4G 
 match if (substring(option vendor-class-identifier, 0, 35) = "dhcpcd-5.2.10:Linux-3.0.15-SPH-D710");
 set ident = "Samsung Galaxy S II Epic 4G Touch (Android 4.0)";
}
class "Vendor-Android4-Samsung-GS2-Skyrocket" {
 # AT&T version with LTE
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
            (suffix   (option vendor-class-identifier, 16)   = ":armv7l:SGH-I727")) or
           (substring(option vendor-class-identifier, 0, 35) = "dhcpcd-5.2.10:Linux-3.0.8-perf-I727");
 set ident = "Samsung Galaxy S II Skyrocket (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyS3" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (substring(suffix(option vendor-class-identifier, 22), 0, 19) = ":armv7l:SAMSUNG M2_"));
 set ident = "Samsung Galaxy S III (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyStellar" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 22)    = ":armv7l:SAMSUNG JASPER"));
 set ident = "Samsung Galaxy Stellar (Android 4.0)"; 
}
class "Vendor-Android4-Samsung-GalaxyTab7.0Plus" {
 match if (substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.10:Linux-3.0.15-P6210");
 set ident = "Samsung Galaxy Tab 7.0 Plus (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyTab10.1" {
 match if (option vendor-class-identifier = "KT_SD_MV_SAMSUNG_SHW-M380W");
 set ident = "Samsung Galaxy Tab 10.1 (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyTab2-7" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:Espresso")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 24)    = ":armv7l:SAMSUNG ESPRESSO"));
 set ident = "Samsung Galaxy Tab 2 7.0 (Android 4.0)";
}
class "Vendor-Android4-Samsung-GalaxyTab2-10" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 18)    = ":armv7l:Espresso10"));
 set ident = "Samsung Galaxy Tab 2 10.1 (Android 4.0)";
}
class "Vendor-Android4-Samsung-NexusS" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 15)    = ":armv7l:herring"));
 set ident = "Samsung Nexus S (Android 4.0)";
}
class "Vendor-Android4-Samsung-Stratosphere4G" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 22)    = ":armv7l:SAMSUNG AEGIS2"));
 set ident = "Samsung Stratosphere 4G (Android 4.0)";
}
class "Vendor-Android4-ZTE-N9100" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 25)    = ":armv7l:ZTE MSM8960 HAYES"));
 set ident = "ZTE Force N9100 (Android 4.0)";
}
# Below other Android 4.0 classes in case of better match
class "Vendor-Android4-Motorola-Droid" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (substring(suffix(option vendor-class-identifier, 21), 0, 17) = ":armv7l:mapphone_"));
 set ident = "Motorola Droid family (Android 4.0)";
}
class "Vendor-Android4-Samsung-Galaxy" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SMDK4x12")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 16)    = ":armv7l:SMDK4210"));
 set ident = "Samsung Galaxy family (Android 4.0)";
}
class "Vendor-Android4-Sony-Xperia" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 12)    = ":armv7l:fuji")) or
          ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") and
           (suffix   (option vendor-class-identifier, 17)    = ":armv7l:riogrande"));
 set ident = "Sony Xperia family (Android 4.0)";
}
class "Vendor-Android4-CyanogenMod9" {
 match if (substring(option vendor-class-identifier, 0, 33) = "dhcpcd-5.2.10:Linux-2.6.39.4_CM9-");
 set ident = "CyanogenMod 9 (Android 4.0)";
}
##
## Android 4.1
##
class "Vendor-Android41-Samsung-CaptivateGlide" {
 match if (substring(option vendor-class-identifier, 0, 31) = "dhcpcd-5.2.10:Linux-3.1.10-I927");
 set ident = "Samsung Captivate Glide / Galaxy S Glide (Android 4.1)";
}
class "Vendor-Android41-Samsung-GalaxyS2" {
 # GT-I9100 is the original 
 # SGH-T989 is the T-Mobile version
 # SGH-I777 is the AT&T version (no LTE)
 # Siyah is a custom ROM for Galaxy S II and III
 match if (substring(option vendor-class-identifier, 0, 40) = "dhcpcd-5.2.10:Linux-3.1.0-R59-Siyah-i777");
 set ident = "Samsung Galaxy S II (Android 4.0)";
}
class "Vendor-Android41-Samsung-GalaxyTab10.1" {
 match if ((substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.1.") and
           (suffix   (option vendor-class-identifier, 10)    = ":armv7l:p3"));
 set ident = "Samsung Galaxy Tab 10.1 (Android 4.1)";
}
##
## Android 6
##
class "Vendor-Android-6-0" {
 match if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-6.0");
 set ident = "Google Android 6.0";
}
##
## Android 7
##
class "Vendor-Android-7-0" {
 match if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-7.0");
 set ident = "Google Android 7.0";
}
class "Vendor-Android-7-1" {
 match if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-7.1");
 set ident = "Google Android 7.1";
}
class "Vendor-Android-7-x" {
 match if (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-N");
 set ident = "Google Android 7.x";
}
##
## Android 8
##
class "Vendor-Android-8-0" {
 match if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-8.0");
 set ident = "Google Android 8.0";
}
class "Vendor-Android-8-x" {
 match if (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-O");
 set ident = "Google Android 8.x";
}
##
## Android 9
##
class "Vendor-Android-9" {
 match if (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-9");
 set ident = "Google Android 9";
}
##
## Android 10
##
class "Vendor-Android-10" {
 match if (substring(option vendor-class-identifier, 0, 15) = "android-dhcp-10");
 set ident = "Google Android 10";
}
##
## Android 11
##
class "Vendor-Android-11" {
 match if (substring(option vendor-class-identifier, 0, 15) = "android-dhcp-11");
 set ident = "Google Android 11";
}
##
## Android 12
##
class "Vendor-Android-12" {
 match if (substring(option vendor-class-identifier, 0, 15) = "android-dhcp-12");
 set ident = "Google Android 12";
} 

class "Vendor-Apple-MacOS9" {
 match if (substring(option vendor-class-identifier, 0, 8) = "Mac OS 9");
 set ident = "Apple Mac OS 9";
}
class "Vendor-AppleNetBoot-Intel" {
 match if (substring(option vendor-class-identifier, 0, 14) = "AAPLBSDPC/i386");
 set ident = "Apple NetBoot (Intel)";
}
class "Vendor-AppleNetBoot-PPC" {
 match if (substring(option vendor-class-identifier, 0, 13) = "AAPLBSDPC/ppc");
 set ident = "Apple NetBoot (PPC)";
}
class "Vendor-Aruba-AP" {
 match if (option vendor-class-identifier = "ArubaAP");
 set ident = "Aruba wireless network appliance";
 # Aruba APs need Option 60 (VCI) to be sent back
 option vendor-class-identifier "ArubaAP";
 # Aruba DHCP discovery seems to cause problems with
 # Cisco DHCP discovery in a mixed environment, despite
 # Cisco using its own option space. DNS discovery may
 # be better.
 #option aruba-controller aaa.bbb.ccc.ddd;
}
class "Vendor-Aruba-InstantAP" {
 match if (option vendor-class-identifier = "ArubaInstantAP");
 set ident = "Aruba wireless network appliance";
 # If using DHCP for AirWave discovery, Instant APs
 # need Option 60 (VCI) to be sent back
 #option vendor-class-identifier "ArubaInstantAP";
}
class "Vendor-Aruba-Controller" {
 # Observed for Mobility Access Switch, assumed for Mobility Controller
 match if (option vendor-class-identifier = "ArubaMC");
 set ident = "Aruba network appliance";
 # TFTP server for Zero-Touch Provisioning
 #option voip-tftp-servers aaa.bbb.ccc.ddd; 
 # If using DHCP for AirWave discovery, Mobility Access Switches
 # need Option 60 (VCI) of "ArubaInstantAP" to be sent back
 #option vendor-class-identifier "ArubaInstantAP";
}
class "Vendor-BlackBerry" {
 match if (option vendor-class-identifier = "BlackBerry") or
          (substring(option vendor-class-identifier, 11, 14) = "RIM.BlackBerry");
 set ident = "BlackBerry";
}
class "Vendor-BlackBerry-BB10" {
 match if (substring(option vendor-class-identifier, 0, 16) = "BlackBerry OS 10");
 set ident = "BlackBerry 10";
}
class "Vendor-BlackBerry-PlayBook" {
 match if (substring(option vendor-class-identifier, 0, 20) = "BlackBerry Tablet OS");
 set ident = "BlackBerry PlayBook";
}
class "Vendor-Boca-Printer" {
 match if (option vendor-class-identifier = "BOCA SYSTEMS PRINTER");
 set ident = "Boca ticket printer";
}
class "Vendor-CBORD-Squadron" {
 match if (option vendor-class-identifier = "CSGold Squadron");
 set ident = "HID VertX / CBORD Squadron access controller (Linux)";
}
class "Vendor-Cisco-AP" {
 match if (substring(option vendor-class-identifier, 0, 8) = "Cisco AP");
 set ident = "Cisco wireless network appliance";
 # Specify syslog server to prevent Cisco APs
 # from logging to the broadcast address
 #option log-servers aaa.bbb.ccc.ddd;
 vendor-option-space cisco-controller;
 #option cisco-controller.ip aaa.bbb.ccc.ddd;
}
class "Vendor-Cisco-Meraki" {
 match if (option vendor-class-identifier = "MERAKI");
 set ident = "Cisco Meraki network appliance";
}
class "Vendor-Cisco-Phone" {
 match if (substring(option vendor-class-identifier, 0, 28) = "Cisco Systems, Inc. IP Phone");
 set ident = "Cisco IP phone";
 # Omit null at the end of the string
 set vendor-id = substring(option vendor-class-identifier, 0, 36);
 #option voip-tftp-servers aaa.bbb.ccc.ddd;
}
class "Vendor-Cisco-Phone-Typo" {
 match if (substring(option vendor-class-identifier, 0, 27) = "Cisco System, Inc. IP Phone");
 set ident = "Cisco IP phone";
 # Omit null at the end of the string
 set vendor-id = substring(option vendor-class-identifier, 0, 35);
 #option voip-tftp-servers aaa.bbb.ccc.ddd;
}
class "Vendor-Cisco-Video" {
 match if (substring(option vendor-class-identifier, 0, 18) = "TANDBERG:Codec:1.0");
 set ident = "Cisco (Tandberg) videoconference unit";
 # Omit null at the end of the string
 set vendor-id = "TANDBERG:Codec:1.0";
}
class "Vendor-Cisco-WLC" {
 match if (substring(option vendor-class-identifier, 0, 12) = "Cisco AIR-CT");
 set ident = "Cisco Wireless LAN Controller";
}
class "Vendor-Cradlepoint" {
 match if (option vendor-class-identifier = "Cradlepoint DHCP Client");
 set ident = "Cradlepoint network appliance";
}
class "Vendor-Debian-Installer" {
 match if (option vendor-class-identifier = "d-i");
 set ident = "Debian Linux (installer)";
}
class "Vendor-Dell-DRAC" {
 match if (option vendor-class-identifier = "iDRAC") or
          (substring(option vendor-class-identifier, 0, 8) = "DELL RAC");
 set ident = "Dell DRAC";
}
class "Vendor-Dell-Printer" {
 match if (substring(option vendor-class-identifier, 0, 4) = "Dell") or
          (substring(option vendor-class-identifier, 4, 4) = "DELL") or
          (substring(option vendor-class-identifier, 21, 4) = "Dell");
 set ident = "Dell printer";
}
class "Vendor-HP-Printer" {
 match if (option vendor-class-identifier = "Hewlett-Packard JetDirect") or
          (option vendor-class-identifier = "Hewlett-Packard LaserJet") or
          (substring(option vendor-class-identifier, 0, 19) = "Mfg=Hewlett Packard");
 set ident = "HP printer";
}
class "Vendor-Juniper-ScreenOS" {
 match if (substring(option vendor-class-identifier, 0, 9) = "NetScreen");
 set ident = "Juniper ScreenOS network appliance";
}
class "Vendor-Lexmark-printer" {
 match if (substring(option vendor-class-identifier, 4, 7) = "LEXMARK");
 set ident = "Lexmark printer";
}
class "Vendor-Linksys" {
 match if (substring(option vendor-class-identifier, 0, 7) = "LINKSYS");
 set ident = "Linksys network appliance";
}
class "Vendor-Microsoft-Xbox" {
 match if (option vendor-class-identifier = "XBOX 1.0");
 set ident = "Microsoft Xbox";
}
class "Vendor-Microsoft-Xbox360" {
 match if (option vendor-class-identifier = "Xbox 360");
 set ident = "Microsoft Xbox 360";
}
class "Vendor-Minix" {
 match if (option vendor-class-identifier = "Minix");
 set ident = "Minix";
}
class "Vendor-Oki-Printer" {
 match if (option vendor-class-identifier = "C330") or
          (option vendor-class-identifier = "MC561");
 set ident = "Oki printer";
}
class "Vendor-PartedMagic" {
 match if (substring(option vendor-class-identifier, 0, 32) = "dhcpcd-5.2.12:Linux-3.3.6-pmagic");
 set ident = "Parted Magic (Linux)";
}
class "Vendor-PowerDsine-midspan" {
 match if (option vendor-class-identifier = "midspan_ip_list");
 set ident = "PowerDsine midspan";
}
class "Vendor-PXE" {
 match if (substring(option vendor-class-identifier, 0, 9) = "PXEClient");
 set ident = "PXE Boot";
}
class "Vendor-Rabbit" {
 match if (substring(option vendor-class-identifier, 0, 12) = "Rabbit-TCPIP");
 set ident = "Rabbit Semiconductor microcontroller";
}
class "Vendor-Samsung-printer" {
 match if (option vendor-class-identifier = "SAMSUNG Network Printer");
 set ident = "Samsung printer";
}
class "Vendor-Samsung-TV" {
 match if (substring(option vendor-class-identifier, 14, 8) = "VD Linux");
 set ident = "Samsung media appliance (Linux)";
}
class "Vendor-Sony-PS3" {
 match if (substring(option vendor-class-identifier, 0, 3) = "PS3");
 set ident = "Sony Playstation 3";
 # Omit null at the end of the string
 set vendor-id = "PS3";
}
class "Vendor-Sony-PS4" {
 match if (substring(option vendor-class-identifier, 0, 3) = "PS4");
 set ident = "Sony Playstation 4";
 # Omit null at the end of the string
 set vendor-id = "PS4";
}
class "Vendor-Sony-PSVita" {
 match if (substring(option vendor-class-identifier, 0, 10) = "PS Vita TV");
 set ident = "Sony Playstation Vita";
 # Omit null at the end of the string
 set vendor-id = "PS Vita TV";
}
class "Vendor-Sun" {
 match if (substring(option vendor-class-identifier, 0, 3) = "SUNW");
 set ident = "SunOS based (Solaris/Illumos)";
}
class "Vendor-TrendNet-Router" {
 match if (option vendor-class-identifier = "TW100-S4W1CA") or
          (option vendor-class-identifier = "TEW-654TR") or
          (option vendor-class-identifier = "trendnet");
 set ident = "TrendNet network appliance";
}
class "Vendor-uClinux" {
 match if (substring(option vendor-class-identifier, 0, 7) = "uClinux");
 set ident = "uClinux (Embedded/Microcontroller Linux)";
}
class "Vendor-Vizio-TV" {
 match if (option vendor-class-identifier = "VIZIO VIA");
 set ident = "Vizio media appliance (Linux)";
}
class "Vendor-Wyse-Terminal" {
 match if (option vendor-class-identifier = "PCoIP Endpoint");
 set ident = "Wyse thin terminal";
}
class "Vendor-Xerox-Printer" {
 match if (option vendor-class-identifier = "Xerox Phaser") or
          (substring(option vendor-class-identifier, 4, 5) = "Xerox") or
          (substring(option vendor-class-identifier, 4, 5) = "XEROX"); 
 set ident = "Xerox printer";
}
class "Vendor-Yealink-Phone" {
 match if (option vendor-class-identifier = "yealink") and
          (substring(option host-name, 0, 3) = "SIP");
 set ident = "Yealink IP phone";
}


##################################
# Match on Parameter Request List (PRL) and optionally Vendor ID
# - most specific match with both
##################################
class "PRL" {
 match option dhcp-parameter-request-list;
}

##
# Apple Mac OS X
##
subclass "PRL" 1:3:c:6:f:70:71:4e:4f { set ident = "Apple Mac OS X 10.0"; } 
subclass "PRL" 1:3:6:f:70:71:4e:4f { set ident = "Apple Mac OS X 10.1"; }
subclass "PRL" 1:3:6:f:70:71:4e:4f:5f { set ident = "Apple Mac OS X 10.2 / 10.3"; }
subclass "PRL" 1:3:6:f:70:71:4e:4f:5f:fc { set ident = "Apple Mac OS X 10.4 / Apple TV G1"; }
subclass "PRL" 1:3:6:f:77:5f:fc:2c:2e:2f { set ident = "Apple Mac OS X 10.5 / 10.6"; }
subclass "PRL" 1:3:6:f:77:5f:fc:2c:2e { set ident = "Apple OS X 10.7 - 10.10"; }
subclass "PRL" 1:79:3:6:f:77:fc:5f:2c:2e { set ident = "Apple OS X 10.11 / macOS 10.12 - 10.15"; }
subclass "PRL" 1:79:3:6:f:72:77:fc:5f:2c:2e { set ident = "Apple macOS 11 - 12"; }
subclass "PRL" 1:79:3:6:f:6c:72:77:fc:5f:2c:2e { set ident = "Apple macOS 12"; }

##
# Apple iOS 2 - 8
##
subclass "PRL" 1:3:6:f:77:fc {
 if (option host-name ~~ "phone")
 {
  set ident = "Apple iPhone (iOS 2 - 8)";
 }
 elsif ((option host-name ~~ "pod") or (option host-name ~~ "touch"))
 {
  set ident = "Apple iPod touch (iOS 2 - 8)";
 }
 elsif (option host-name ~~ "pad")
 {
  set ident = "Apple iPad (iOS 3 - 8)";
 }
 elsif (option host-name ~~ "tv")
 {
  set ident = "Apple tvOS 4 - 7 (iOS 4 - 8)";
 }
 elsif (option host-name ~~ "watch")
 {
  set ident = "Apple watchOS 1.0 (iOS 8.2)";
 }
 else { set ident = "Apple iOS 2 - 8"; }
}

##
# Apple iOS 9 - 13
##
subclass "PRL" 1:79:3:6:f:77:fc {
 if (option host-name ~~ "phone")
 {
  set ident = "Apple iPhone (iOS 9 - 13)";
 }
 elsif ((option host-name ~~ "pod") or (option host-name ~~ "touch"))
 {
  set ident = "Apple iPod touch (iOS 9 - 13)";
 }
 elsif (option host-name ~~ "pad")
 {
  set ident = "Apple iPad (iOS 9 - 13)";
 }
 elsif (option host-name ~~ "tv")
 {
  set ident = "Apple tvOS 9 - 13 (iOS 9 - 13)";
 }
 elsif (option host-name ~~ "watch")
 {
  set ident = "Apple watchOS 2 - 6 (iOS 9 - 13)";
 }
 else { set ident = "Apple iOS 9 - 13"; }
}

##
# Apple iOS 14
##
subclass "PRL" 1:79:3:6:f:72:77:fc {
 if (option host-name ~~ "phone")
 {
  set ident = "Apple iPhone (iOS 14)";
 }
 elsif ((option host-name ~~ "pod") or (option host-name ~~ "touch"))
 {
  set ident = "Apple iPod touch (iOS 14)";
 }
 elsif (option host-name ~~ "pad")
 {
  set ident = "Apple iPadOS (iOS 14)";
 }
 elsif (option host-name ~~ "tv")
 {
  set ident = "Apple tvOS 14 (iOS 14)";
 }
 elsif (option host-name ~~ "watch")
 {
  set ident = "Apple watchOS 7 (iOS 14)";
 }
 else { set ident = "Apple iOS 14"; }
}

##
# Apple iOS 15 - 16
##
subclass "PRL" 1:79:3:6:f:6c:72:77:fc {
 if (option host-name ~~ "phone")
 {
  set ident = "Apple iPhone (iOS 15 - 16)";
 }
 elsif ((option host-name ~~ "pod") or (option host-name ~~ "touch"))
 {
  set ident = "Apple iPod touch (iOS 15 - 16)";
 }
 elsif (option host-name ~~ "pad")
 {
  set ident = "Apple iPadOS (iOS 15 - 16)";
 }
 elsif (option host-name ~~ "tv")
 {
  set ident = "Apple tvOS 15 - 16 (iOS 15 - 16)";
 }
 elsif (option host-name ~~ "watch")
 {
  set ident = "Apple watchOS 8 - 9 (iOS 15 - 16)";
 }
 else { set ident = "Apple iOS 15 - 16"; }
}

##
# Apple AirPort Base Station (Extreme/Express/TimeCapsule)
##
subclass "PRL" 1:2:3:f:6:c:2c { set ident = "Apple network appliance"; }

##
# Linux (Debian-based)
##
# Debian installer matched on vendor ID
#subclass "PRL" 1:1c:2:3:f:6:c:2a { set ident = "Debian Linux installer"; }
subclass "PRL" 1:1c:2:3:f:6:c:2c:2f { set ident = "Ubuntu Linux 4.10 - 8.04"; }
subclass "PRL" 1:1c:2:3:f:6:c:2c:2f:1a { set ident = "Debian Linux 4"; }
subclass "PRL" 1:1c:2:3:f:6:77:c:2c:2f:1a { set ident = "Ubuntu Linux 8.10"; }
subclass "PRL" 1:1c:2:3:f:6:77:c:2c:2f:1a:79 { set ident = "Debian Linux 5"; }
subclass "PRL" 1:1c:2:3:f:6:77:c:2c:2f:1a:79:2a { set ident = "Debian Linux 6 or derivative (dhclient)"; }
subclass "PRL" 1:1c:2:3:f:6:77:c:2c:2f:1a:79:2a:79:f9:fc:2a{
 set ident = "Debian Linux 7 or derivative (NetworkManager)";
}
subclass "PRL" 1:1c:2:3:f:6:77:c:2c:2f:1a:79:2a:79:f9:21:fc:2a {
 set ident = "Debian Linux or derivative";
}
##
# Linux (RedHat-based)
##
subclass "PRL" 1:1c:2:3:f:6:c:28:29:2a { set ident = "Red Hat Enterprise Linux 5 or derivative"; }
subclass "PRL" 1:1c:2:3:f:6:c:28:29:2a:1a { set ident = "Red Hat Enterprise Linux 5 or derivative"; }
subclass "PRL" 1:1c:2:3:f:6:c:28:29:2a:1a:77 { set ident = "Red Hat Enterprise Linux 6 or derivative"; }
subclass "PRL" 1:1c:2:79:f:6:c:28:29:2a:1a:77:3:79:f9:2a { set ident = "Red Hat Enterprise Linux 6 or derivative"; }
subclass "PRL" 1:1c:2:79:f:6:c:28:29:2a:1a:77:3 { set ident = "Red Hat-based Linux (dhclient)"; }
subclass "PRL" 1:1c:2:79:f:6:c:28:29:2a:1a:77:3:79:f9:fc:2a { set ident = "Red Hat-based Linux (NetworkManager)"; }
subclass "PRL" 1:1c:2:79:f:6:c:28:29:2a:1a:77:3:79:f9:21:2a { set ident = "Red Hat-based Linux"; }
subclass "PRL" 1:1c:2:79:f:6:c:28:29:2a:1a:77:3:79:f9:21:fc:2a { set ident = "Red Hat-based Linux"; }
subclass "PRL" 1:2:6:c:f:1a:1c:79:3:21:28:29:2a:77:f9:fc:11 {
 if (option host-name = "sysrescue") { set ident = "SystemRescue"; }
 else { set ident = "Red Hat-based Linux"; }
}
##
# Linux (SUSE-based)
##
subclass "PRL" 1:1c:3:79:1a:c:f:77:6:28:29:57:55:56:2c:2d:2e:2f:2a { set ident = "openSUSE Linux"; }
subclass "PRL" 3a:3b:1:1c:79:21:3:c:77:f:6:28:29:2a:1a:11:78:9:7:2c:2d:2f {
 if (option vendor-class-identifier = "dhcpcd 3.2.3") { set ident = "openSUSE Linux"; }
}
subclass "PRL" 3a:3b:1:1c:79:21:3:c:77:f:6:28:29:2a:1a:11:78:9:7:2c:2d:2e:2f {
 if (option vendor-class-identifier = "dhcpcd 3.2.3") { set ident = "openSUSE Linux"; }
}
##
# Linx (Arch-based)
##
subclass "PRL" 1:3:6:c:f:21:2a:78:79 { set ident = "Arch Linux"; }
##
# Linux Terminal Server Project
##
subclass "PRL" 1:3:6:c:f:1c:28:29:2a:42 {
 if (option vendor-class-identifier = "udhcp 0.9.9-pre") {
  set ident = "Linux Terminal Server Project";
 }
}

##
# Android
##
subclass "PRL" 1:79:21:3:6:1c:33:3a:3b {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") { set ident = "Google Android 2.1 / 2.2 / 2.3"; }
}
subclass "PRL" 1:79:21:3:6:f:1c:33:3a:3b {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") { set ident = "Google Android 2.2"; }
}
subclass "PRL" 1:79:21:3:6:f:1c:33:3a:3b:77 {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") {
  if (substring (option host-name, 0, 7) = "kindle-") {
   set ident = "Amazon Kindle Fire (Android 2.3)";
  }
  else {
   set ident = "Google Android 2.3";
  }
 }
}
subclass "PRL" 1:21:3:6:f:1c:2c:33:3a:3b:77 {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") { set ident = "Google Android 2.1 / 2.2 / 2.3"; }
}
subclass "PRL" 1:21:3:6:c:f:1c:33:3a:3b:77 {
if (substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") {
  set ident = "Google Android 4.0";
 }
}
subclass "PRL"1:79:21:3:6:c:f:1c:33:3a:3b:77 {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") { set ident = "Google Android 2.1 / 2.2 / 2.3"; }
}
subclass "PRL" 1:79:21:3:6:f:1c:2c:33:3a:3b:77 {
 if (option vendor-class-identifier = "dhcpcd 4.0.15") { set ident = "Google Android 2.1 / 2.2 / 2.3"; }
}
subclass "PRL" 1:21:3:6:1c:33:3a:3b {
 if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.32") {
  set ident = "Google Android 2.2";
 }
 elsif (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") {
  set ident = "Google Android 2.3";
 }
 elsif (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") {
  set ident = "Google Android 3.0 / 3.1";
 }
 elsif (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") {
  set ident = "Google Android 3.2";
 }
 elsif (substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") {
  set ident = "Google Android 4.0";
 }
 elsif (substring(option vendor-class-identifier, 0, 13) = "dhcpcd-5.2.10") {
  set ident = "Google Android 2.2 or later";
 }
 elsif ((substring(option host-name, 0, 7) = "Android") or
         (substring(option host-name, 0, 7) = "android")) {
  set ident = "Google Android 2.2 or later";
 }
 else {
  set ident = "Google Android 2.2 or later (best guess)";
 }
}
subclass "PRL" 1:21:3:6:f:1c:33:3a:3b {
 if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35") {
  set ident = "Google Android 2.3";
 }
 elsif (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36") {
  set ident = "Google Android 3.0 / 3.1";
 }
 elsif (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39") {
  set ident = "Google Android 3.2";
 }
 elsif (substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.") {
  set ident = "Google Android 4.0";
 }
 elsif (substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.1.") {
  set ident = "Google Android 4.1";
 }
 elsif (substring(option vendor-class-identifier, 0, 13) = "dhcpcd-5.2.10") {
  if (substring(option host-name, 0, 7) = "kindle-" ) {
   set ident = "Amazon Kindle Fire HD (Android 4.0)";
  } else {
   set ident = "Google Android 2.3 or later";
  }
 }
 elsif (substring(option vendor-class-identifier, 0, 12) = "dhcpcd-5.5.6") {
  set ident = "Google Android 4.2 or later";
 }
 elsif ((substring(option host-name, 0, 7) = "Android") or
         (substring(option host-name, 0, 7) = "android")) {
  set ident = "Google Android 2.3 or later";
 }
 else {
  set ident = "Google Android 2.3 or later (best guess)";
 }
}
subclass "PRL" 1:3:6:f:1a:1c:33:3a:3b {
 if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-6.0") {
  set ident = "Google Android 6.0";
 }
 elsif (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-N") {
  set ident = "Google Android 7.x";
 }
 else {
  set ident = "Google Android 6.0 or later";
 }
}
subclass "PRL" 1:3:6:f:1a:1c:33:3a:3b:2b {
 # Earlier Vendor-Class-Identifier classes should match these
 # Observed for Android 7 - 11
 if (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-7.0") {
  set ident = "Google Android 7.0";
 }
 elsif (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-7.1") {
  set ident = "Google Android 7.1";
 }
 elsif (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-N") {
  set ident = "Google Android 7.x";
 }
 elsif (substring(option vendor-class-identifier, 0, 16) = "android-dhcp-8.0") {
  set ident = "Google Android 8.0";
 }
 elsif (substring(option vendor-class-identifier, 0, 14) = "android-dhcp-O") {
  set ident = "Google Android 8.x";
 }
 else {
  set ident = "Google Android 7.0 or later";
 }
}
subclass "PRL" 1:3:6:f:1a:1c:33:3a:3b:2b:72:6c {
 # Earlier Vendor-Class-Identifier classes should match these
 # Observed for Android 12
 if (substring(option vendor-class-identifier, 0, 15) = "android-dhcp-12") { 
  set ident = "Google Android 12";
 }
 else {
  set ident = "Google Android 12 or later";
 }
}
# Chrome OS
subclass "PRL" 1:79:21:3:6:c:f:1a:1c:33:36:3a:3b:77 {
 if (substring(option vendor-class-identifier, 0, 12) = "dhcpcd 5.1.4") { set ident = "Google Chrome OS"; }
}

##
# Microsoft Windows
##
subclass "PRL" 1:3:6:f:33:2c { set ident = "Microsoft MS-DOS"; }
subclass "PRL" 1:3:f:6:2c:2e:2f { set ident = "Microsoft Windows 3.1 / 95"; }
subclass "PRL" 1:3:6:f:2c:2e:2f:39 {
 if (option host-name = "RAS") { set ident = "Delta Networks network appliance"; }
 else { set ident = "Microsoft Windows 98"; }
}
subclass "PRL" 1:f:3:6:2c:2e:2f:2b:4d {
 if (substring(option vendor-class-identifier, 0, 7) = "MSFT 98") {
   if (option host-name = "My Host") { set ident = "D-Link network appliance"; }
   else {
    set ident = "Microsoft Windows 98SE";
    # Omit null at the end of the string
    set vendor-id = "MSFT 98";
  }
 }
}
subclass "PRL" 1:f:3:6:2c:2e:2f:1f:21:2b:4d {
 if (substring(option vendor-class-identifier, 0, 7) = "MSFT 98") {
   set ident = "Microsoft Windows ME";
   # Omit null at the end of the string
   set vendor-id = "MSFT 98";
 }
}
subclass "PRL" 3:2c:2e:2f:6 { set ident = "Microsoft Windows NT 3.5"; }
subclass "PRL" 1:f:3:2c:2e:2f:6 { set ident = "Microsoft Windows NT 3.51 / 4.0"; }
subclass "PRL" 1:f:3:6:2c:2e:2f:1f:21:2b {
 if (option vendor-class-identifier = "MSFT 5.0") {
  if (substring(option host-name, 0, 3) = "DI-") { set ident = "D-Link network appliance"; }
  else {
   set ident = "Microsoft Windows 2000";
   # Return (empty) WPAD/proxy option
   option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
  }
 }
}
subclass "PRL" 1:f:3:6:2c:2e:2f:1f:21:f9:2b {
 if (option vendor-class-identifier = "MSFT 5.0") {
  set ident = "Microsoft Windows XP / Server 2003";
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
subclass "PRL" 1:f:3:6:2c:2e:2f:1f:21:79:f9:2b {
 if (option vendor-class-identifier = "MSFT 5.0") {
  set ident = "Microsoft Windows Vista / Windows 7 / Server 2008";
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
subclass "PRL" 6:3:1:f:42:43:d:2c {
 if (option vendor-class-identifier = "MSFT 5.0") {
  set ident = "Microsoft Windows Vista / Windows 7 / Server 2008";
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
 elsif (substring(option host-name, 0, 2) = "HP") { set ident = "HP printer"; }
 elsif (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; } 
 else { set ident = "Epson printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:2c:c {
 # Windows often uses this without vendor string
 if (substring(option host-name, 0, 2) = "HP") { set ident = "HP printer"; }
 elsif (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
 else {
  set ident = "Microsoft Windows Vista / Windows 7 / Server 2008";
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
# Windows 8.x & 10 v1507
subclass "PRL" 1:f:3:6:2c:2e:2f:1f:21:79:f9:fc:2b {
 if (option vendor-class-identifier = "MSFT 5.0") {
  if (suffix(option host-name, 6) = "-Phone") {
   set ident = "Microsoft Windows Phone 8";
  }
  elsif (option host-name = "XboxOne" or
           option host-name = "XBOXONE" or
           option host-name = "Xbox-SystemOS") {
   set ident = "Microsoft Xbox One";
  }
  else {
   set ident = "Microsoft Windows 8.x / 10 / Server 2012";
  }
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
# Windows 10 v1511 - 1709
subclass "PRL" 1:3:6:f:1f:21:2b:2c:2e:2f:79:f9:fc {
 if (option vendor-class-identifier = "MSFT 5.0") {
  if (suffix(option host-name, 6) = "-Phone") {
   set ident = "Microsoft Windows Phone 10";
  }
  elsif (option host-name = "XboxOne" or
           option host-name = "XBOXONE" or
           option host-name = "Xbox-SystemOS") {
   set ident = "Microsoft Xbox One";
  }
  else {
   set ident = "Microsoft Windows 10 / Server 2016";
  }
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
# Windows 10 v1803 - 21H2 & 11 v21H2
subclass "PRL" 1:3:6:f:1f:21:2b:2c:2e:2f:77:79:f9:fc {
 if (option vendor-class-identifier = "MSFT 5.0") {
  if (suffix(option host-name, 6) = "-Phone") {
   set ident = "Microsoft Windows Phone 10";
  }
  elsif (option host-name = "XboxOne" or
           option host-name = "XBOXONE" or
           option host-name = "Xbox-SystemOS") {
   set ident = "Microsoft Xbox One";
  }
  else {
   set ident = "Microsoft Windows 10 / 11 / Server 2019";
  }
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}
subclass "PRL" 1:3:6:f:1f:21:2b:2c:2e:2f:77:79:f9:fc:0:44:d0 {
 if (option vendor-class-identifier = "MSFT 5.0") {
  if (suffix(option host-name, 6) = "-Phone") {
   set ident = "Microsoft Windows Phone 10";
  }
  elsif (option host-name = "XboxOne" or
           option host-name = "XBOXONE" or
           option host-name = "Xbox-SystemOS") {
   set ident = "Microsoft Xbox One";
  }
  else {
   set ident = "Microsoft Windows 10 / Server 2019";
  }
  # Return (empty) WPAD/proxy option
  option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list, fc);
 }
}

# Microsoft Windows CE
subclass "PRL" 1:3:6:f:2c:2e:2f {
 if (substring(option vendor-class-identifier, 0, 20) = "Microsoft Windows CE") {
  set ident = "Microsoft Windows Mobile 6";
  # Omit null at the end of the string
  set vendor-id = "Microsoft Windows CE";
 }
 else {
  set ident = "Microsoft Windows CE";
  # Omit null at the end of the string
  set vendor-id = "Microsoft Windows CE";
 }
}

##
# Game consoles
##
subclass "PRL" 1:3:6:1a:1c:3a:3b { set ident = "Nintendo GameCube"; }
subclass "PRL" 1:3:1c:6 { set ident = "Nintendo GameCube"; }
subclass "PRL" 1:3:6:f:1c:21 {
 if (substring (option vendor-class-identifier, 0, 7) = "IBMWARP") {
  set ident = "eComStation (IBM OS/2)";
 }
 elsif (option host-name = "Wii") { set ident = "Nintendo Wii"; }
 elsif (option host-name = "Nintendo 3DS") { set ident = "Nintendo 3DS"; }
}
subclass "PRL" 1:3:6:1c {
 # The Switch sends no hostname or Vendor-Class-ID
 set ident = "Nintendo Switch";
}
# PS3 and Xbox 360 matched by Vendor-Class-ID

##
# ISC dhclient
# webOS, ChromeOS, Ubuntu installers, NetBSD
##
subclass "PRL" 1:1c:2:3:f:6:c {
 if (substring(option host-name, 0, 3) = "NPI") {
  set ident = "HP printer";
 }
 elsif (substring(option host-name, 0, 5) = "TIVO-") {
  set ident = "TiVo media appliance (Linux)";
 }
 else { set ident = "ISC dhclient (Linux/Unix)"; }
}

##
# Printers
##
subclass "PRL" 1:3:6:f:1c { set ident = "Dell printer"; }
subclass "PRL" 1:2:3:6:c:f:1a:1c:58:2c:2d:2e:2f:46:45:4e:4f {
 set ident = "Dell printer";
}
subclass "PRL" 1:2:3:6:c:f:1a:1c:55:56:57:58:2c:2d:2e:2f:46:45:4e:4f {
 set ident = "Dell printer";
}
subclass "PRL" 1:3:2a:4:6:7:c:f:1a:2c:33:36:3a:3b:be {
  if ((substring(option host-name, 0, 4) = "DELL") or (substring(option host-name, 0, 2) = "ET")) {
   set ident = "Dell printer"; 
  }
  elsif (substring(option host-name, 0, 3) = "LXK") {
   set ident = "Lexmark printer";
  }
  else { set ident = "Dell or Lexmark printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:c { set ident = "HP printer"; }
subclass "PRL" 6:3:1:f:2c:c {
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
}
subclass "PRL" 6:3:1:f:c:42:43:d:2c {
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:2c:c:51 {
 if (substring(option host-name, 0, 2) = "HP") { set ident = "HP printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:2c:c:51:fc {
 if (substring(option host-name, 0, 2) = "HP") { set ident = "HP printer"; }
}
subclass "PRL" c:1:1c:3:f:6:2c {
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
}
subclass "PRL" 6:3:1:f:c:2c:51:45:2a:2b:12:42:43:96:7 {
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
}
subclass "PRL" 6:3:1:f:c:2c:51:45:2b:12:42:43:96:7 {
 if (substring(option host-name, 0, 3) = "NPI") { set ident = "HP printer"; }
}
subclass "PRL" 1:3:6:f:2c { set ident = "Konica Minolta printer"; }
subclass "PRL" 1:3:6:f:2c:2e { set ident = "Konica Minolta printer"; }
subclass "PRL" 1:3:f:2c:2e {
 if (substring(option host-name, 0, 2) = "KM") { set ident = "Konica Minolta printer"; }
}
subclass "PRL" 1:3:6:c:f:1c:2c:2f { set ident = "Ricoh printer"; }
subclass "PRL" 1:3:6:c:f:1c:2c:2f:cc {
 if (substring(option host-name, 0, 3) = "RNP") { set ident = "Ricoh printer"; }
}
subclass "PRL" 1:3:6:f:1c:2c:2f {
 if (substring(option host-name, 0, 3) = "RNP") { set ident = "Ricoh printer"; }
}
subclass "PRL" 1:3:6:c:f:1c:28:29:2a {
 if(substring(option host-name, 0, 6) = "IFBD-H") { set ident = "Star Micronics printer"; }
 else { set ident = "Linux media appliance"; }
}
subclass "PRL" 6:3:1:f:42:43:d:c:2c {
 if (substring(option host-name, 0, 2) = "BR") { set ident = "Brother printer"; }
 elsif (substring(option host-name, 0, 4) = "MFC-") { set ident = "Brother printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:c:2c:2:2a {
 if (substring(option host-name, 0, 2) = "BR") { set ident = "Brother printer"; }
}
subclass "PRL" 6:3:1:f:42:43:d:2c:2:2a:78:7d:c {
 if (substring(option host-name, 0, 2) = "BR") { set ident = "Brother printer"; }
}
subclass "PRL" 1:3:6:2c:c:f:4:45:46:2a {
 if (substring(option host-name, 0, 4) = "MFP-") { set ident = "Océ printer"; }
}
subclass "PRL" 1:3:6:c:f:11:1c:28:29:2a { set ident = "Epson printer"; }
subclass "PRL" 1:3:6:c:f:1c:33:36:3a:3b { set ident = "Epson printer"; }
subclass "PRL" 1:3:6:c:f:1c:2a:28:26:17:25:27:13:1a { set ident = "Epson printer"; }
subclass "PRL" 1:3:6:f:2c:2f {
 if (substring(option host-name, 0, 5) = "Canon") { set ident = "Canon printer"; }
}
subclass "PRL" 1:3:6:f:45 { set ident = "Canon printer"; }
subclass "PRL" 1:3:c:17:6:f:2c:2f { set ident = "Canon printer"; }
subclass "PRL" 1:3:f:6:2c {
 if (substring(option host-name, 0, 2) = "KM") { set ident = "Kyocera printer"; }
}
subclass "PRL" 1:2:3:6:c:f:12:13:2e:2f:36:39:3a:3b {
 set ident = "Panasonic printer";
}
subclass "PRL" 1:3:c:17:6:f:2a:2c:2f { set ident = "Muratec printer"; }

##
# Other OS
##
subclass "PRL" 1:1c:2:3:f:6:c:2a {
 if (option host-name = "sysrescue") { set ident = "SystemRescue"; }
 else { set ident = "ReactOS"; }
}
subclass "PRL" 1:1c:2:79:3:f:6:c { set ident = "FreeBSD"; }
subclass "PRL" 1:1c:3:f:6:c { set ident = "OpenBSD"; }
subclass "PRL" 1:3:6:c:f:1c:2b { set ident = "SunOS-based (Solaris/Illumos)"; }
subclass "PRL" 1:3:6:1c:f { set ident = "Haiku (BeOS)"; }


##
# Network appliances
##
subclass "PRL" 1:1c:3 { set ident = "QLogic network appliance (Linux)"; }
subclass "PRL" 1:3:33:36 {
 if (option vendor-class-identifier = "brcmftsk") { set ident = "Broadcom iSCSI offload engine"; }
}
subclass "PRL" 1:6:f:2c:3:21 { set ident = "Cisco ASA network appliance"; }
subclass "PRL" 1:6:f:2c:3:21:2b { set ident = "Cisco IOS network appliance"; }
subclass "PRL" 1:6:f:2c:3:21:96:2b { set ident = "Cisco IOS network appliance"; }
subclass "PRL" 1:3:6:c:f:42:43:96 { set ident = "Cisco ADE-OS network appliance"; }
subclass "PRL" 1:f:3:1c:c:6:1a { set ident = "Cisco Meraki network appliance"; }
subclass "PRL" 1:3:42:43:36:7d:81:96:6:f:64 { set ident = "Cisco Small Business network appliance"; }
subclass "PRL" 1:3:6:f:2a {
 if (substring(option vendor-class-identifier, 0, 8) = "Educator") {
  set ident = "Cisco Telepresence VX Educator videoconference unit";
 }
}
subclass "PRL" 1:3:6:c:f:4:2b:2c:3c:2a:1c { set ident = "Aruba network appliance"; }
subclass "PRL" 33:36:1:3:6:f { set ident = "Juniper ScreenOS network appliance"; }
subclass "PRL" 33:36:1:3:6:f:2c { set ident = "Juniper ScreenOS network appliance"; }
subclass "PRL" 3:33:1:f:6:42:43:78:2c { set ident = "Juniper Junos network appliance"; }
subclass "PRL" 1:3:42:43:36:3d:81:6:f { set ident = "HP (3com) network appliance"; }
subclass "PRL" 1:3:6:c:f:2a:2b { set ident = "Wyse thin terminal"; }

subclass "PRL" 1:f:3:6:2c:2e:2f { set ident = "Linksys network appliance (Linux)"; }
subclass "PRL" 1:3:6:c:f:1c:2c {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Linksys network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:2c:21:f9 {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Linksys network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:2a:d4 {
 if (option vendor-class-identifier = "udhcp 1.15.2") { set ident = "Linksys network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:2a:79 {
 if (option vendor-class-identifier = "udhcp 1.15.2") { set ident = "Linksys network appliance (Linux)"; }
}
subclass "PRL" 1:3:2a:6:7:f:3a:3b:2c:42 {
 if (substring(option vendor-class-identifier, 0, 7) = "LINKSYS") { set ident = "Linksys network appliance"; }
}
subclass "PRL" 1:3:f:6:d4 { set ident = "Linksys network appliance"; }
subclass "PRL" 1:1c:3:6:f:2c { set ident = "Linksys network appliance"; }
subclass "PRL" 1:3:6:c:f:1c:28:29:2a:79 {
 if (option vendor-class-identifier = "udhcp 0.9.9-pre") {
  set ident = "Asus or Linksys network appliance (Linux)";
  }
}
# Asus, Belkin, Linksys, etc
subclass "PRL" 3:1:6:f { set ident = "Network appliance"; }
subclass "PRL" 3:1:6:f:79 { set ident = "Apple or Belkin network appliance"; }
subclass "PRL" 1:3:f:6 {
 if (substring(option host-name, 0, 5) = "Cisco") { set ident = "Linksys network appliance"; }
 else { set ident = "Linux network appliance"; }
}
subclass "PRL" 1:3:6:f:1c:36 {
 set ident = "Network appliance (best guess)";
}
subclass "PRL" 1:3:6:c:f:1c:2a:79:21:f9 {
 if (option vendor-class-identifier = "udhcp 1.17.4") { set ident = "Asus network appliance (Linux)"; }
}
subclass "PRL" 1:79:3:6:c:f:1c:21 {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Netgear network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:21:2c:79 {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Netgear network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:21:2c:79:f9 {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Netgear network appliance (Linux)"; }
}
subclass "PRL" 1:79:f9:3:6:c:f:1c:21:2b {
 if (option vendor-class-identifier = "udhcp 0.9.8") { set ident = "Netgear network appliance (Linux)"; }
}
subclass "PRL" 1:3:6:c:f:1c:21:79 {
 if (option vendor-class-identifier = "udhcp 0.9.9-pre") { set ident = "Netgear network appliance (Linux)"; }
}
subclass "PRL" 3:1:6:f:c { set ident = "Netgear network appliance (Linux)"; }
subclass "PRL" 1:3:6:2c:f:2e:2f {
 if (substring(option host-name, 0, 4) = "DIR-") { set ident = "D-Link network appliance"; }
 else { set ident = "Cradlepoint network appliance"; }
}
subclass "PRL" 1:3:6:c:f:1c:2c:2e:2f { set ident = "D-Link network appliance"; }
subclass "PRL" 1:3:6:c:f:1c:28:29:2a:2c:2e:2f { set ident = "D-Link network appliance"; }
subclass "PRL" 1:3:6:c:f:1c:21:28:29:2a:2c:2e:2f { set ident = "D-Link network appliance"; }
subclass "PRL" 1:3:2b:2c:2e:2f:6 { set ident = "TP-Link network appliance"; }
subclass "PRL" 1:3:2b:2c:2e:2f:6:21:79:f9 { set ident = "TP-Link network appliance"; }
subclass "PRL" 1:3:6:f:21:2b:2c:2e:2f:79:f9 { set ident = "TP-Link network appliance (Linux)"; }
subclass "PRL" 1:3:6:c:f:1c:21:28:29:2a:2c { set ident = "TrendNet network appliance"; }
subclass "PRL" 1:3:6:c:f:1c:21:28:29:2a:2c:f9 { set ident = "TrendNet network appliance"; }
subclass "PRL" 1:3:6:f:21:2c:2e:2f:79:f9:2b { set ident = "Western Digital network appliance (Linux)"; }
subclass "PRL" 1:3:6:c:f:1c:21:2c { set ident = "Belkin network appliance (Linux)"; }
subclass "PRL" 1:3:79:6:c:f:1c:32:21 { set ident = "Belkin network appliance (Linux)"; }
subclass "PRL" 1:3:6:c:f:1c:32:21 {
 if (option vendor-class-identifier = "udhcp 0.9.7") { set ident = "Apple or Belkin network appliance"; }
}
subclass "PRL" 1:1c:2:3:f:6:4:7:17:1a:2b:32:33:36:37:3c:3d:48 {
 if (option vendor-class-identifier = "Wireless Broadband Router") {
  set ident = "Actiontec network appliance";
 }
}
subclass "PRL" 1:3:6:c:f:1c {
 if (option host-name = "RP614v4") { set ident = "Netgear network appliance (Linux)"; }
 elsif (substring(option host-name, 0, 5) = "RISE-") { set ident = "Rise Display media appliance (Linux)"; }
 # Normally wouldn't use an OUI matches, but
 # Airvana only has 00:05:B9
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 6) = "0:5:b9") {
  set ident = "Airvana network appliance";
 }
 # Obvius only has 00:1E:C6
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:1e:c6") {
  set ident = "Obvius data acquisition appliance (Linux)";
 }
 # Many DVRs appear to use udhcp in this configuration
 # CTRing only has 00:19:9C
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:19:9c") {
  set ident = "CTRing DVR (Linux)";
 }
 # Pinetron only has 00:02:F1
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 6) = "0:2:f1") {
  set ident = "Pinetron DVR (Linux)";
 }
 # EverFocus only has 00:11:14
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:11:14") {
  set ident = "EverFocus / Honeywell DVR or camera (Linux)";
 }
 # WatchGuard has 00:01:21 and 00:90:7F
 elsif ((substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:1:21") or
          (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:90:7f")) {
  set ident = "WatchGuard network appliance (Linux)";
 }
 else {
  set ident = "Linux appliance";
 }
}
# Vendor-Class-ID matching should get Xbox, BlackBerry, DRAC
subclass "PRL" 1:3:6:f {
 if (option vendor-class-identifier = "MSFT 98") { set ident = "D-Link network appliance"; }
 elsif (substring(option host-name, 0, 2) = "SC") { set ident = "Belkin network appliance"; }
 elsif (option host-name = "FR114P") { set ident = "Netgear network appliance"; }
 elsif (option host-name = "FVS114") { set ident = "Netgear network appliance"; }
 elsif (substring(option host-name, 0, 4) = "KMBT") { set ident = "Konica Minolta printer"; }
 elsif (option host-name = "Nintendo Wii U") { set ident = "Nintendo Wii U"; }
 else { set ident = "Printer or network appliance (best guess)"; }
}
subclass "PRL" 3:1 {
 set ident = "Printer or network appliance (best guess)";
}

##
# Linux appliances (non-network)
##
subclass "PRL" 1:3:f:6:c:1c { set ident = "LG media appliance (Linux)"; }
subclass "PRL" 1:3:6:f:c { set ident = "Printer or Linux media appliance (best guess)"; }
subclass "PRL" 1:3:6:f:1c:c:7:9:2a:30:31 { set ident = "Sony media appliance (Linux)"; }
subclass "PRL" 1:3:6:36 { set ident = "Sharp media appliance"; }
subclass "PRL" 1:1c:3:6:f:2:2a:4:42  {
 if (substring(option host-name, 0, 8) = "CONVERGE")
 {
  set ident = "ClearOne Converge media appliance";
 }
}
subclass "PRL" 1:3:6:c:f:11:17:1c:1d:1f:21:28:29:2a {
 if (substring(option vendor-class-identifier, 0, 5) = "Linux") {
  set ident = "Linux media appliance";
 }
 else {
  set ident = "Linux appliance (best guess)";
 }
}
subclass "PRL" 1:3:6:c:f:1c:2a {
 if (substring (option vendor-class-identifier, 0, 5) = "udhcp") {
  set ident = "Linux appliance";
 }
 elsif (substring(option host-name, 0, 4) = "DCS-") {
  set ident = "D-Link network camera";
 }
}
subclass "PRL" 1:3:6:c:f:11:17:1c:1d:1f:21:28:29:2a:77 {
 if (substring (option vendor-class-identifier, 0, 5) = "Linux") { set ident = "Linux appliance"; }
}

##
# Other
##
subclass "PRL" 1:3:6:c:33:3a:3b { set ident = "Samsung mobile phone"; }
subclass "PRL" 1:3:6:1c:f:c {
 if (option host-name = "DVR") { set ident = "Mace Security DVR"; }
}
subclass "PRL" 1:3:6:f:3a:3b {
 if (option host-name = "WIZnet") { set ident = "WIZnet embedded network appliance"; }
}
subclass "PRL" 1:79:21:3:6:c:f:1a:1c:2a:33:36:3a:3b:77 {
 if (suffix(option vendor-class-identifier, 15) = "Settop Platform") {
  set ident = "Linux media appliance";
 }
 elsif (option host-name = "PartedMagic") {
  set ident = "Parted Magic (Linux)";
 }
 elsif (substring(option host-name, 0, 7) = "puppypc") {
  set ident = "Puppy Linux";
 }
 elsif (substring (option vendor-class-identifier, 0, 19) = "dhcpcd-5.2.10:Linux") {
   set ident = "dhcpcd client (Linux)";
 }
 elsif (substring (option vendor-class-identifier, 0, 19) = "dhcpcd-5.2.12:Linux") {
   set ident = "dhcpcd client (Linux)";
 }
 elsif (substring (option vendor-class-identifier, 0, 18) = "dhcpcd-5.5.6:Linux") {
   set ident = "dhcpcd client (Linux)";
 }
 elsif (substring (option vendor-class-identifier, 0, 18) = "dhcpcd-5.6.4:Linux") {
   set ident = "dhcpcd client (Linux)";
 }
}
subclass "PRL" 3:1c:36:1:6:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0 {
 set ident = "Liebert UPS";
}
subclass "PRL" 6:3:1:f:42:43:d:2c:2b:3a:3b:2a:2:c {
 set ident = "APC UPS";
}
subclass "PRL" 1:3:6 {
 if (option vendor-class-identifier = "MSFT 98") {
  if (substring(option host-name, 0, 4) = "DCS-") { set ident = "D-Link network camera"; }
 }
 elsif (substring(option host-name, 0, 3) = "CAB") {
  set ident = "Vending Terminal Server";
 }
 elsif (option host-name = "Ionic") {
  set ident = "FitBit Ionic";
 }
 elsif (option host-name = "Sense") {
  set ident = "FitBit Sense";
 }
}
subclass "PRL" 1:3:6:f:42:43:d:2c {
  if (substring(option host-name, 0, 8) = "GainSpan") {
    set ident = "GainSpan IoT appliance";
  }
}
subclass "PRL" 1:3:6:c:f:1c:2a:28:26:17:25:26:27:13:1a
{
 # Nothing to differentiate these other than MAC address
 if (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:11:62")
 {
  set ident = "Star Micronics printer";
 }
 elsif (substring(binary-to-ascii(16, 8, ":", substring(hardware, 1, 6)), 0, 7) = "0:40:9d")
 {
  set ident = "Geist environmental monitor";
 }
}

subclass "PRL" 1:3:c:2c:f:6:33 {
 # No idea what this is.
 # Strangely matched as OS/2 when without its own subclass.
 if (option vendor-class-identifier = "MSFT 5.0") {
 }
 else {
 }
}
subclass "PRL" 6:3:1:f:42:43:d {
 if (substring(option host-name, 0, 2) = "HP") { set ident = "HP printer"; }
}
subclass "PRL" 1:3:c:6:f:42:45:46:5f:78:8d:97:a2:2b {
 if (substring(option vendor-class-identifier, 0, 5) = "NECDT") { set ident = "NEC IP phone"; }
}


##################################
# Match on non-specific Vendor ID (best guess)
##################################
# Android 2.2
class "Vendor-Android2.2-generic" {
 match if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.32");
 set ident = "Google Android 2.2 (best guess)";
}
# Android 2.3
class "Vendor-Android2.3-generic" {
 match if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.35");
 set ident = "Google Android 2.3 (best guess)";
}
# Android 3.x
class "Vendor-Android3-generic" {
 match if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.36");
 set ident = "Google Android 3.0 / 3.1 (best guess)";
}
# Android 3.2
class "Vendor-Android3.2-generic" {
 match if (substring(option vendor-class-identifier, 0, 26) = "dhcpcd-5.2.10:Linux-2.6.39");
 set ident = "Google Android 3.2 (best guess)";
}
# Android 4.0
class "Vendor-Android4-generic" {
 match if (substring(option vendor-class-identifier, 0, 24) = "dhcpcd-5.2.10:Linux-3.0.");
 set ident = "Google Android 4.0 (best guess)";
}
# Android 2.x
class "Vendor-dhcpcd-Android2x" {
 match if (option vendor-class-identifier = "dhcpcd 4.0.15");
 set ident = "Google Android 2.1 / 2.2 / 2.3 (best guess)";
}
# Android 2.0
class "Vendor-dhcpcd-Android20" {
 match if (option vendor-class-identifier = "dhcpcd 4.0.1");
 set ident = "Google Android 2.0 (best guess)";
}
# Unknown Android, by hostname
class "Vendor-Android-hostname" {
 match if (substring(option host-name, 0, 7) = "Android") or
          (substring(option host-name, 0, 7) = "android");
 set ident = "Google Android (best guess)";
} 
# Classic Mac OS
class "Vendor-Apple-MacOS" {
 match if (substring(option vendor-class-identifier, 0, 6) = "Mac OS");
 set ident = "Apple Mac OS (Classic)";
}
class "Vendor-dhcpcd-generic" {
 match if (substring(option vendor-class-identifier, 0, 6) = "dhcpcd");
 set ident = "dhcpcd client (Linux/Unix)";
}
class "Vendor-IBM-OS2" {
 match if (substring(option vendor-class-identifier, 0, 7) = "IBMWARP");
 set ident = "IBM OS/2";
}
# Could be embedded Linux, may not be worth it to match on Vendor ID
class "Vendor-Linux" {
 match if (substring(option vendor-class-identifier, 0, 5) = "Linux");
 set ident = "Linux appliance (best guess)";
}
# Probably a Linux appliance (media center, etc)
class "Vendor-udhcp-generic" {
 match if (substring(option vendor-class-identifier, 0, 5) = "udhcp") or
          (substring(option vendor-class-identifier, 0, 5) = "uDHCP");
 set ident = "BusyBox uDHCP client (Linux/Unix)";
}
class "Vendor-WinCE" {
 match if (substring(option vendor-class-identifier, 0, 20) = "Microsoft Windows CE");
 set ident = "Microsoft Windows CE";
 # Omit null at the end of the string
 set vendor-id = "Microsoft Windows CE";
}


##################################
# Additional Logging
##################################
on commit {
  # These have to exist in an event where a lease exists
  set ipv4-address = binary-to-ascii(10, 8, ".", leased-address);
  if (static) {
   set lease-type = "Static";
  }
  else {
   set lease-type = "Dynamic";
  }

  # Option 51
  set lease-length = binary-to-ascii(10, 32, "", encode-int(lease-time, 32));

  # Option 61
  # https://adamkuj.net/blog/2015/10/09/isc-dhcpd-putting-option-82-vendor-codes-to-use/
  set mac-binary = substring(hardware, 1, 6);
  set mac-address = concat (
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,0,1))),2), ":",
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,1,1))),2), ":",
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,2,1))),2), ":",
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,3,1))),2), ":",
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,4,1))),2), ":",
    suffix(concat("0", binary-to-ascii(16, 8, "", substring(mac-binary,5,1))),2)
  );

  # Option 82 information is present
  # https://mincebert.blogspot.com/2013/09/dhcp-option-82-cisco-switches-and.html
  #
  if (exists agent.circuit-id) {
   # Older Juniper Junos
   # - Circuit ID string
   #   - Could be inteface:vlan or hostname:interface:vlan
   #   - No good way to parse hostname out if present
   # - Remote ID not present
   if (not exists agent.remote-id and option agent.circuit-id ~~ ":") {
     # 4-digit VLAN
     if (substring(suffix(option agent.circuit-id, 5), 0, 1) = ":") {
       set opt82-log = concat(" | ",
         "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 5, 128)), " | ",
         "VLAN=", suffix(option agent.circuit-id, 4)
       );
     }
     # 3-digit VLAN
     elsif (substring(suffix(option agent.circuit-id, 4), 0, 1) = ":") {
       set opt82-log = concat(" | ",
         "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 4, 128)), " | ",
         "VLAN=", suffix(option agent.circuit-id, 3)
       );
     }
     # 2-digit VLAN, assumes VLAN is string and not binary
     elsif (substring(suffix(option agent.circuit-id, 3), 0, 1) = ":") {
       set opt82-log = concat(" | ",
         "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 3, 128)), " | ",
         "VLAN=", suffix(option agent.circuit-id, 2)
       );
     }
     # 1-digit VLAN
     elsif (substring(suffix(option agent.circuit-id, 2), 0, 1) = ":") {
       set opt82-log = concat(" | ",
         "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 2, 128)), " | ",
         "VLAN=", suffix(option agent.circuit-id, 1)
       );
     }
     else {
      set opt82-log = concat(" | ",
        "Port=", option agent.circuit-id
      );
     }
   }

   # Aruba Mobility Controller
   # - Circuit ID string
   #   - Assumed to be access point (MAC, name, etc)
   #   - This will also match the interface.unit case on older Junos
   # - Remote ID not present
   elsif (not exists agent.remote-id) {
     set opt82-log = concat(" | ",
       "AP=", option agent.circuit-id
     );
   }

   # Cisco Wireless LAN Controller
   # - Circuit ID 0:0:0:0
   # - Remote ID string
   #   - Assumed to be access point
   #
   elsif (option agent.circuit-id = 0:0:0:0) {
     set opt82-log = concat(" | ",
       "AP=", option agent.remote-id
     );
   }

   # Cisco IOS switch
   # - Circuit ID vlan:mod:port
   #   - vlan: 2 bytes @ offset 2
   #   - module: 1 byte @ offset 4
   #   - port: 1 byte @ offset 5
   # - Remote ID string
   #   - prefix: 1 byte @ offset 0 (01)
   #   - length: 1 byte @ offset 1
   #   - string @ offset 2 (assumed to be switch hostname)
   elsif (extract-int(substring(option agent.remote-id, 0, 1), 8) = 1) {
     set opt82-log = concat(" | ",
       "Switch=", substring(option agent.remote-id, 2, extract-int(substring(option agent.remote-id, 1, 1), 8)), " | ",
       "Port=", binary-to-ascii(10, 8, "", substring(option agent.circuit-id, 4, 1)), "/",
                binary-to-ascii(10, 8, "", substring(option agent.circuit-id, 5, 1)), " | ",
       "VLAN=", binary-to-ascii(10, 16, "", substring(option agent.circuit-id, 2, 2))
     );
   }

   # Aruba Mobility Access Switch
   # - Circuit ID interface:vlan
   #   - configured order in DHCP relay config does not matter
   #   - string
   #     - interface name
   #   - colon character: 1 byte @ length-3
   #   - vlan intenger: 2 bytes @ length-2 
   # - Remote ID string
   #   - Assumed to be switch hostname
   elsif (substring(suffix(option agent.circuit-id, 3), 0, 1) = ":") {
     set opt82-log = concat(" | ",
       "Switch=", option agent.remote-id, " | ",
       "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 3, 128)), " | ",
       "VLAN=", binary-to-ascii(10, 16, "", suffix(option agent.circuit-id, 2)) 
     );
   }

   # Newer Juniper Junos (irb-and-l2 config)
   # - Circuit ID interface:vlan
   #   - string
   #     - interface name
   #   - colon character: 1 byte @ length-5
   #   - vlan string: 4 bytes @ length-4
   #     - UNKNOWN IF STRING IS PADDED
   # - Remote ID string
   #   - Assumed to be switch hostname
   elsif (substring(suffix(option agent.circuit-id, 5), 0, 1) = ":") {
     set opt82-log = concat(" | ",
       "Switch=", option agent.remote-id, " | ",
       "Port=", reverse(1, substring(reverse(1, option agent.circuit-id), 5, 128)), " | ",
       "VLAN=", suffix(option agent.circuit-id, 4)
     );
   }

   # Informational Catch-All
   else {
     set opt82-log = concat(" | ",
       "CircuitID=", option agent.circuit-id, " | ",
       "RemoteID=", pick-first-value(option agent.remote-id, "[None]")
     );
   }
  } # if agent.circuit-id exists

  # No Option 82
  else {
    set opt82-log = "";
  }

  # Log client's identifying information
  log(info,
    concat("DHCPIDENT: ",
      "MAC=", mac-address, " | ",
      "IP=", ipv4-address, " | ",
      lease-type, " | ",
      "Length=", lease-length, " | " ,
      "PRL=", pick-first-value(prl, "[None]"), " | ",
      "Vendor=", pick-first-value(vendor-id, "[None]"), " | ",
      "Hostname=", pick-first-value(option host-name, "[None]"), " | ",
      "Client=", pick-first-value(ident, "[Unknown]"),
      opt82-log
    )
  );
} # on commit

# Log expirations
on expiry {
  # This has to exist in an event where a lease exists
  set ipv4-address = binary-to-ascii(10, 8, ".", leased-address);
  log(info, concat("DHCPEXPIRE: ", ipv4-address));
}
